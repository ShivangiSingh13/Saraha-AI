import streamlit as st

translations = {
    "hi": {
        "Select your category:": "‡§Ö‡§™‡§®‡•Ä ‡§∂‡•ç‡§∞‡•á‡§£‡•Ä ‡§ö‡•Å‡§®‡•á‡§Ç:",
        "Recommended Government Schemes:": "‡§Ö‡§®‡•Å‡§∂‡§Ç‡§∏‡§ø‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç:",
        "Your Feedback Helps Us Improve:": "‡§Ü‡§™‡§ï‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§π‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à:",
        "Let us know how we can help you better:": "‡§π‡§Æ‡•á‡§Ç ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç:",
        "Submit Feedback": "‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§∏‡§¨‡§Æ‡§ø‡§ü ‡§ï‡§∞‡•á‡§Ç",
        "Thank you for your valuable input!": "‡§Ü‡§™‡§ï‡•á ‡§¨‡§π‡•Å‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶!",
        "About this App": "‡§á‡§∏ ‡§ê‡§™ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        "This digital companion helps...": "‡§Ø‡§π ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§æ‡§•‡•Ä ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§â‡§®‡§ï‡•Ä ‡§™‡•ç‡§∞‡•ã‡§´‡§º‡§æ‡§á‡§≤ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§®‡•á ‡§î‡§∞ ‡§ñ‡•ã‡§ú‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§"
    }
}
def translate_text(text, dest):
    if dest == "en":
        return text
    return translations.get(dest, {}).get(text, text)

# Language options
languages = {
    "English": "en",
    "Hindi": "hi"
}

# Scheme database
schemes = {
    "Women": [
        {"name": "Beti Bachao, Beti Padhao", "desc": "Promotes education for girls."},
        {"name": "PM Ujjwala Yojana", "desc": "LPG connection for women below poverty line."}
    ],
    "Farmers": [
        {"name": "PM-KISAN", "desc": "Income support to farmers."},
        {"name": "Soil Health Card", "desc": "Provides information on nutrient status of soil."}
    ],
    "Students": [
        {"name": "National Scholarship Portal", "desc": "Scholarships for meritorious students."},
        {"name": "Skill India Mission", "desc": "Enhances employability of youth."}
    ]
}

# Translate text function
def translate_text(text, dest):
    if dest == "en":
        return text
    try:
        return translator.translate(text, dest=dest).text
    except:
        return text  # fallback in case of API failure

# App title
st.set_page_config(page_title="Digital Companion for Social Welfare", layout="centered")
st.title("ü§ù Digital Companion for Social Welfare")

# Language selection
lang = st.selectbox("Choose your language / ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:", list(languages.keys()))
dest_lang = languages[lang]

# User type selection
user_type = st.radio(translate_text("Select your category:", dest_lang), list(schemes.keys()))

# Show schemes
st.subheader(translate_text("Recommended Government Schemes:", dest_lang))
for scheme in schemes[user_type]:
    st.markdown(f"**{translate_text(scheme['name'], dest_lang)}**")
    st.markdown(f"*{translate_text(scheme['desc'], dest_lang)}*")
    st.divider()

# Feedback
st.subheader(translate_text("Your Feedback Helps Us Improve:", dest_lang))
feedback = st.text_area(translate_text("Let us know how we can help you better:", dest_lang))
if st.button(translate_text("Submit Feedback", dest_lang)):
    st.success(translate_text("Thank you for your valuable input!", dest_lang))

# About section
with st.expander(translate_text("About this App", dest_lang)):
    st.write(translate_text(
        "This digital companion helps citizens explore and understand government schemes based on their profile."
        " We aim to bridge the awareness gap and make social welfare accessible to all.", dest_lang))
